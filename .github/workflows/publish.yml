name: publish maven and docker packages
on:
  push:
    branches:
      - main
  schedule:
    - cron:  '0 3 * * *'
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  test-and-deploy-maven:
    name: Maven test and deploy action
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Set up JDK 14
        uses: actions/setup-java@v1
        with:
          java-version: 14
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Run junit5 tests with Maven
        run: mvn test --settings maven-settings.xml --file pom.xml
        env: 
          MAVEN_REGISTRY_USERNAME: ${{ github.actor }}
          MAVEN_REGISTRY_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy jar to maven packages repository
        run: mvn deploy --settings maven-settings.xml --file pom.xml
        env: 
          MAVEN_REGISTRY_USERNAME: ${{ github.actor }}
          MAVEN_REGISTRY_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-and-push-docker:
    name: Build and publish docker action
    runs-on: ubuntu-latest
    needs: test-and-deploy-maven
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: ./docker/fibonacci-service/Dockerfile